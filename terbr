#!/data/data/com.termux/files/usr/bin/bash

# TERBR v4 - Termux Backup/Restore Tool
# Copyright (C) 2020  MrAlpha786
#
#  This program is free software: you can redistribute it
# and/ or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation either
# version 3 of the License, or (at your option) any later
# version.
#
#  This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more
# details.
#
#  You should have received a copy of the GNU General
# Public License along with this program.  If not, see
# <https://www.gnu.org/licenses/>.
#
# Author: MrAlpha786     (github/MrAlpha786)
#
#colors and other variable
R='\033[1;31m'
B='\033[1;34m'
C='\033[0;36m'
G='\033[1;32m'
Y='\033[1;33m'
N='\033[0m'
TERBR_COMMAND='tar'
TERBR_FILE="/storage/emulated/0/termux_backup$(date +%m%d%Y_%H%M%S).bak"
readonly BACKUP_SRC='/data/data/com.termux/files'

function banner() {
    echo
    echo -e "$B ┌───────────────────────┐"
    echo -e "$B │$C ▀█▀ █▀▀ █▀▀▄ █▀▄ █▀▀▄ $B│"
    echo -e "$B │$C ─█─ █▀▀ █▐█▀ █▀█ █▐█▀ $B│"
    echo -e "$B │$C ─▀─ ▀▀▀ ▀─▀▀ ▀▀─ ▀─▀▀ $B│"
    echo -e "$B └───────────────────────┘"
    echo -e "$G  -> Author: MrAlpha786 $N"
    echo
}

function backup() {
    cd $BACKUP_SRC

    echo -e "${G}Saving to '${TERBR_FILE}'\n"
    echo -e "${Y}[*] Backing Up Files.............."
    sleep 1
    echo -e "${R}[!] It may take a while. Please wait...${G}\n"

    ${TERBR_COMMAND} ${TERBR_FILE} usr home

    echo -e "${G}[!] Backup Done! "
}

# function restore () {
#     cd $BACKUP_SRC

#     echo -e "${G}Restoring from '${TERBR_FILE}'\n"
#     echo -e "${Y}[*] Restoring Files..............."
#     sleep 1
#     echo -e "${R}[!] It may take a while. Please wait...${G}\n"

#     # ${TERBR_COMMAND} ${TERBR_FILE} usr home
#     echo ${TERBR_FILE}

#     echo -e "${G} [!] Restore Done! "
# }

function usage() {
    echo -e "Usage: $(basename $0) -[hvVbr] "
    echo -e "Create Termux Backup and Restore it.\n"
	echo -e "      -b   Take backup"
	echo -e "      -r   Restore backup"
	echo -e "      -V   Verbose output"
	echo -e "      -h   Print usage"
	echo -e "      -v   Print version"
}

function version() {
    echo "Terbr v4 - Termux Backup and Restore Tool"
    echo "A tool to Backup and Restore Termux"
    echo "Copyright (C) 2020  MrAlpha786"
    echo "This program is free software: you can redistribute it and/or modify it under the terms of the GNU GPL as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version."
    echo
    echo "This program is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
    echo
    echo "Author: MrAlpha786 (github.com/MrAlpha786)"
}

# Cleanup on unexpected error
function error_exit() {
    SIGNAL=$?
    rm -f ${TERBR_FILE}
    termux-wake-unlock
    exit ${SIGNAL}
}

# Trap signals
trap 'error_exit' 1 2 3 15 20

while getopts ':hvVbr' arg; do
	case $arg in
		b) unset TERBR_RESTORE; TERBR_BACKUP=True
            ;;

                r) unset TERBR_BACKUP; TERBR_RESTORE=True;
            ;;

		V) TERBR_VERBOSE=True
            ;;

		h) usage; exit
            ;;

		v) version; exit
            ;;

        ?) echo "Invalid option -${OPTARG}" >&2
            usage >&2; exit 1
            ;;
	esac
done

# Show usage if no option is provided
if [ ${OPTIND} -eq 1 ]; then
    usage >&2; exit 1
fi

# Check Storage Permission
if [ ! -w ${DEFAULT_DEST} ]; then
    termux-setup-storage
fi

# Check if pigz is installed
if type -p pigz &> /dev/null; then
    TERBR_COMMAND+=' -I pigz'
else
    termux-wake-lock
    TERBR_COMMAND+=' -z'
fi

# Enable Verbose mode
if [ "${TERBR_VERBOSE}" == True ]; then
    TERBR_COMMAND+=' -v'
fi

# Backup
if [ "${TERBR_BACKUP}" == True ]; then
    TERBR_COMMAND+=' -cf'
    backup
    termux-wake-unlock
fi

# Restore
if [ "${TERBR_RESTORE}" == True ]; then
    TERBR_COMMAND+=' -xf'
    # restore
fi
